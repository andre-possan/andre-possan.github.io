.about {
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: 100vh;
}

.about__texts__button {
    margin-top: 2rem;
}

.about__image-and-skills {
    position: relative;
    font-size: 16px;
}

.about__image {
    background: url(../img/hacker-mind.svg);
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;

    background-color: var(--blue-50);
    border-radius: 50%;

    width: 28em;
    height: 28em;

    box-shadow: 0 0 30px var(--blue-40);

    transition: 400ms;
}

.about__image-and-skills:hover .about__image {
    box-shadow: 0 0 35px var(--glow-20);

    background-color: var(--glow-20);
}

.about__image-and-skills:hover .about__skills,
.about__image-and-skills:hover .about__skills__item {
    animation-play-state: paused;
}

.about__skills {
    position: absolute;
    top: 0;
    left: 45%;

    height: 28em;

    animation: rotateSkillsList 20s infinite linear;
}

.about__skills__item {
    position: absolute;

    width: 3.5em;
    height: 3.5em;

    transition: 200ms;

    animation: rotateSkillIcon 20s infinite reverse linear;
}

.about__skills__item--html {
    top: -2.9em;
    background: url(../img/icons/html.svg);
}

.about__skills__item--css {
    bottom: -3em;
    background: url(../img/icons/css.svg);
}

.about__skills__item--js {
    top: 50%;
    left: 15.5em;
    background: url(../img/icons/js.svg);
}

.about__skills__item--figma {
    top: 50%;
    left: -15.5em;
    background: url(../img/icons/figma.svg);
}

.about__skills__item--git {
    top: 10%;
    right: -14.5em;
    background: url(../img/icons/git.svg);
}

/* Mobile */
@media screen and (min-width: 0px) {
    .about {
        flex-direction: column;
    }
}

/* Desktop */
@media screen and (min-width: 1441px) {
    .about {
        flex-direction: row;
    }
}

@keyframes rotateSkillIcon {
    to {
        transform: rotate(360deg);
    }
}

@keyframes rotateSkillsList {
    0% {
        transform: rotate(0);
    }

    25% {
        transform: rotate(90deg) translateX(-1.4em) translateY(-1.4em);
    }

    50% {
        transform: rotate(180deg) translateX(-2.5em) translateY(0);
    }

    75% {
        transform: rotate(270deg) translateX(-1.5em) translateY(1.1em);
    }

    100% {
        transform: rotate(360deg);
    }
}